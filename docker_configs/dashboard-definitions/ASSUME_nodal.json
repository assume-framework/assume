{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 4,
  "links": [],
  "panels": [
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Nodal Analysing Board\n\nThis board can be used to visualize the Grid statistics and usage.\nAs well as the prices at different locations of the grid.",
        "mode": "markdown"
      },
      "pluginVersion": "11.3.1",
      "title": "Nodal Dashboard",
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 0.5
              },
              {
                "color": "red",
                "value": 0.8
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "usage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percentunit"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 4
      },
      "id": 101,
      "options": {
        "basemap": {
          "config": {},
          "type": "osm-standard"
        },
        "controls": {
          "mouseWheelZoom": true,
          "showAttribution": true,
          "showDebug": false,
          "showLayercontrol": true,
          "showScale": false,
          "showZoom": true
        },
        "layers": [
          {
            "config": {
              "cluster": false,
              "clusterDistance": 20,
              "clusterMinDistance": 0,
              "clusterValue": "size",
              "color": {
                "field": "usage",
                "fixed": "dark-green"
              },
              "enableGradient": false,
              "enableShadow": false,
              "fillOpacity": 0.4,
              "iconSize": 9,
              "pinShape": "marker",
              "shape": "circle",
              "showLegend": true,
              "showPin": false,
              "size": {
                "fixed": 5,
                "max": 15,
                "min": 2
              }
            },
            "displayProperties": [
              "bus0",
              "bus1",
              "usage"
            ],
            "location": {
              "geohash": "geometry",
              "geojson": "geometry",
              "mode": "geojson"
            },
            "name": "Grid Data",
            "query": "A",
            "titleField": "name",
            "type": "markers"
          }
        ],
        "view": {
          "id": "auto",
          "lat": 52.335101,
          "lon": 11.6025,
          "zoom": 5
        }
      },
      "pluginVersion": "1.4.4",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime, coalesce(abs(flow),0)/s_nom as \"usage\", l.line as name, bus0, bus1, ST_AsGeoJSON(ST_GeomFromEWKT(wkt_srid_4326)) as geometry, l.simulation\nFROM lines_geo l\nleft join grid_flows g on l.line = g.line and l.simulation = g.simulation\nWHERE\n  $__timeFilter(datetime) AND\nl.simulation = '$simulation'\nORDER BY 1\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "r"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "lines_geo",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": []
        }
      ],
      "title": "Grid Information",
      "type": "orchestracities-map-panel"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "Overview of nodal results",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kwatt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 4
      },
      "id": 103,
      "options": {
        "legend": {
          "calcs": [
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "unit_id"
              ],
              "type": "column"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "select $__timeGroupAlias(datetime, $__interval), line, avg(flow) as flow from grid_flows where simulation = '$simulation'\nAND $__timeFilter(datetime)\nGROUP BY 1, line\nORDER BY 1;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "price"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "unit_id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "unit_id"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "market_orders",
          "timeColumn": "start_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "market_id",
                "=",
                "'$market'"
              ],
              "type": "expression"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "simulation",
                "=",
                "'$simulation'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Grid Flows Nodal",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 30,
      "panels": [],
      "title": "Market Data",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 17,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Market-specific Data\n\nData specific for the market depending on the choice made at te top of the panel\n\n",
        "mode": "markdown"
      },
      "pluginVersion": "11.3.1",
      "title": "",
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "Overview of market results for the chossen market",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "left",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 1,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "stepAfter",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "megwatt"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/Price .*/"
            },
            "properties": [
              {
                "id": "unit",
                "value": "€/MWh"
              },
              {
                "id": "custom.axisPlacement",
                "value": "auto"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 11,
      "maxPerRow": 4,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(product_start,$__interval),\n  node as \"Node\",\n  avg(demand_volume) AS \"Demand volume\",\n  avg(supply_volume) AS \"Supply volume\",\n  avg(price) AS \"Price\"\nFROM market_meta\nWHERE (\"simulation\" LIKE '$simulation') AND \"market_id\" = '$market' AND $__timeFilter(product_start)\nGROUP BY 1, node\nORDER BY 1;\n",
          "refId": "Volume",
          "select": [
            [
              {
                "params": [
                  "supply_volume"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "market_meta",
          "timeColumn": "product_start",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Market Summary $market",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "Bid prices of accepted bids per unit in the chosen market",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "€/MW"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 25
      },
      "id": 19,
      "options": {
        "legend": {
          "calcs": [
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "unit_id"
              ],
              "type": "column"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(start_time,$__interval),\n  avg(accepted_price::float) AS \" \",\n  case\n    when bid_type isnull then concat(unit_id, '_SB')\n    when bid_type != '' then concat(unit_id, '_', bid_type)\n  end AS \"bid_id\"\nFROM market_orders\nWHERE\n  $__timeFilter(start_time) AND\n  market_id = '$market' AND\n  simulation = '$simulation'\nGROUP BY 1, unit_id, bid_id, bid_type\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "price"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "unit_id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "unit_id"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "market_orders",
          "timeColumn": "start_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "market_id",
                "=",
                "'$market'"
              ],
              "type": "expression"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "simulation",
                "=",
                "'$simulation'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Accepted Bid Prices",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "Accepted Volume  per unit in chosen market",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "megwatt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 25
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "unit_id"
              ],
              "type": "column"
            }
          ],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(start_time,$__interval),\n  avg(accepted_volume) AS \" \",\n  case\n    when bid_type isnull then concat(unit_id, '_SB')\n    when bid_type != '' then concat(unit_id, '_', bid_type)\n  end AS \"bid_id\"\nFROM market_orders\nWHERE\n  $__timeFilter(start_time) AND\n  market_id = '$market' AND\n  simulation = '$simulation'\nGROUP BY 1, unit_id, bid_id, bid_type\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "volume"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "volume"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "unit_id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "unit_id"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "market_orders",
          "timeColumn": "start_time",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "market_id",
                "=",
                "'$market'"
              ],
              "type": "expression"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "simulation",
                "=",
                "'$simulation'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Accepted Bid Volume",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "example_01d",
          "value": "example_01d"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT simulation\nFROM market_meta",
        "description": "Can choose which simulation we want to show ",
        "includeAll": false,
        "name": "simulation",
        "options": [],
        "query": "SELECT simulation\nFROM market_meta",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "DAM",
          "value": "DAM"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT \n  market_id\nFROM market_meta\nwhere simulation='$simulation'\ngroup by market_id ;",
        "description": "Choose for which market the data is displayed",
        "includeAll": false,
        "name": "market",
        "options": [],
        "query": "SELECT \n  market_id\nFROM market_meta\nwhere simulation='$simulation'\ngroup by market_id ;",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2018-12-31T23:00:00.000Z",
    "to": "2019-01-08T23:00:00.000Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h"
    ]
  },
  "timezone": "",
  "title": "ASSUME - Nodal view",
  "uid": "nodalview",
  "version": 21,
  "weekStart": ""
}
