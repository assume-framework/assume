{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Here, the reinforcement learning specific data of assume will be plotted. Especially the process during the learning",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Welcome to ASSUMES Learning Dashboard\n",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  datetime AS \"time\",\n  power\nFROM market_dispatch\nWHERE\n  $__timeFilter(datetime)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "gridPos": {
        "h": 10,
        "w": 6,
        "x": 0,
        "y": 2
      },
      "id": 8,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "#### Introduction\n\nHere we visualize the results of the reinforcment learning process for the specified units that us a learning strategy. Reinforcement Learning is a machine learning paradigm where an agent learns to make a sequence of decisions in an environment to maximize a reward signal. The agent explores the environment, takes actions, and receives feedback in the form of rewards. The goal is to learn a strategy (policy) that guides the agent to make actions that lead to the highest cumulative reward over time. To better understand the agent's learning process, we use visualizations that illustrate key aspects of its journey.",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  datetime AS \"time\",\n  power\nFROM market_dispatch\nWHERE\n  $__timeFilter(datetime)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": " ",
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "gridPos": {
        "h": 10,
        "w": 18,
        "x": 6,
        "y": 2
      },
      "id": 12,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "#### How to use the dashboard\n\nThis interactive tool is designed to help you gain insights into the learning journey of our reinforcement learning (RL) agent. \nTo understand the dashboard take note of the following three points:\n\n##### 1. Division of the Dashboard:\nThe dashboard is divided into two parts. The upper part summarizes the results for all learning units over all simulated episodes. The lower part focuses the results on speicifc units and episodes, which you can select according to the second point.\n\n\n##### 2. Selection of Metrics and Simulation Subsets:\nThe dashboard is devided in system wide plots and plots spefically for certain episodes, timeframes and learning units.\nOn the top of the dashboard, you'll find a list of available choices for the episode of the simualtiona and a list of RL units. \nChoose the ones you're interested in by selecting on their names in the list. The selected metrics will be displayed on the Choice specific visualization area.\n\n\n##### 3. Interaction with Plots:\nThe plots are interactive. You can zoom in and out, click on data points to view specific details etc.\n\n\nIf you need some guidance for interpreting the results, you can orient yourself on the follwing steps:\n\n1. Understand Learning Trends: Observe how reward, exploration, and other metrics change over time. Look for trends such as increasing rewards, decreasing episode length, and changes in exploration patterns.\n2. Examine Policy and Action Patterns: Visualize the agent's learned policy and action distribution. Darker shades indicate preferred actions, while lighter shades show less preferred ones.\n3. Monitor Learning Curve and Loss: Keep an eye on the learning curve to see how the agent's performance evolves. If applicable, check the loss curve to understand the convergence of the learning algorithm.\n4. Track Success Rate: If success/failure in an auction is relevant, track the success rate plot to gauge the agent's success in completing a trade. Note that sometimes the circumstances might not allow a successfull trade.\n5. Compare Different Strategies: If multiple algorithms or learning parameter sets are available, use the comparison plot to assess their performance. Select the ones you want to compare, and observe how their learning trajectories differ.\n6. Experiment and Learn: Use this tool to experiment with different settings and learn about RL agent behavior. It's a great way to develop a deeper understanding of reinforcement learning concepts.",
        "mode": "markdown"
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  datetime AS \"time\",\n  power\nFROM market_dispatch\nWHERE\n  $__timeFilter(datetime)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 18,
      "panels": [],
      "title": "Simulation Wide Data",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 20,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  index,\n  simulation,\n  unit,\n  episode,\n  reward\nFROM rl_params\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average Reward of all RL Unit ",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "regret (mean)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byType",
              "options": "time"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "auto"
              },
              {
                "id": "custom.axisLabel",
                "value": "Development over all modelled episodes"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \r\n  $__timeGroupAlias(index,$__interval),\r\n  'episode ' || episode AS \"episode\",\r\n  sum(sum(reward)) OVER (PARTITION BY episode ORDER BY index) AS \"cumulative_reward\"\r\nFROM\r\n  rl_params\r\nWHERE\r\n  $__timeFilter(index) \r\nGROUP BY 1, index, episode\r\nORDER BY 1\r\n\r\n\r\n\r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Cumulative avergage Profit over all Units per episode",
      "transformations": [],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "displayMode": "auto",
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 6,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \r\nindex,\r\nprofit,\r\nreward,\r\nregret,\r\nunit\r\nFROM rl_params\r\nlimit 50;\r\n  \r\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Examplary Subset of RL Parameteres",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 45
      },
      "id": 16,
      "panels": [],
      "title": "Unit-specific and Episodic Data ",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 0,
        "y": 46
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "simulation"
              ],
              "type": "column"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(index,$__interval),\n  avg(profit) AS \"profit\",\n  simulation AS \"simulation\"\nFROM rl_params\nWHERE\n  $__timeFilter(index) AND\n  simulation IN ($simulation) AND\n  unit = '$rl_unit'\nGROUP BY 1, simulation\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "profit"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "profit"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "simulation"
                ],
                "type": "column"
              },
              {
                "params": [
                  "simulation"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "simulation",
                "IN",
                "($simulation)"
              ],
              "type": "expression"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "unit",
                "=",
                "'$rl_unit'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Unitwise Profit for $rl_unit",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.axisPlacement",
                "value": "left"
              },
              {
                "id": "max",
                "value": 5
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "regret"
            },
            "properties": [
              {
                "id": "unit",
                "value": "none"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 12,
        "y": 46
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "simulation"
              ],
              "type": "column"
            }
          ],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  $__timeGroupAlias(index,$__interval),\n  avg(regret) AS \"regret\",\n  avg(reward) AS \"reward\",\n  simulation AS \"simulation\"\nFROM rl_params\nWHERE\n  $__timeFilter(index) AND\n  simulation IN ($simulation) AND\n  unit = '$rl_unit'\nGROUP BY 1, simulation\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "regret"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "regret"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "simulation"
                ],
                "type": "column"
              },
              {
                "params": [
                  "simulation"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "simulation",
                "IN",
                "($simulation)"
              ],
              "type": "expression"
            },
            {
              "datatype": "text",
              "name": "",
              "params": [
                "unit",
                "=",
                "'$rl_unit'"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "title": "Unitwise Regret&Reward for $rl_unit",
      "type": "timeseries"
    }
  ],
  "refresh": false,
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Unit 3",
          "value": "Unit 3"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT distinct unit\nFROM rl_params",
        "description": "All units that have an reinforcment learning strategy and hence have the Rl specific parameteres logged",
        "hide": 0,
        "includeAll": false,
        "label": "rl_unit",
        "multi": false,
        "name": "rl_unit",
        "options": [],
        "query": "SELECT distinct unit\nFROM rl_params",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": [
            "example_01_rl_base_0"
          ],
          "value": [
            "example_01_rl_base_0"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT \n  simulation\nFROM rl_params\ngroup by simulation;",
        "description": "Can choose which simulation we want to show ",
        "hide": 0,
        "includeAll": false,
        "multi": true,
        "name": "simulation",
        "options": [],
        "query": "SELECT \n  simulation\nFROM rl_params\ngroup by simulation;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "1",
          "value": "1"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT \n  CAST(episode AS INT) AS episode_int\nFROM rl_params\ngroup by episode_int;",
        "description": "Gives us the number of runs of the simulation period learned ",
        "hide": 0,
        "includeAll": false,
        "label": "learning episode",
        "multi": false,
        "name": "episode",
        "options": [],
        "query": "SELECT \n  CAST(episode AS INT) AS episode_int\nFROM rl_params\ngroup by episode_int;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2019-01-01T19:39:43.800Z",
    "to": "2019-01-03T20:04:32.202Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Assume_Learning",
  "uid": "JKQzx0q4k",
  "version": 7,
  "weekStart": ""
}
