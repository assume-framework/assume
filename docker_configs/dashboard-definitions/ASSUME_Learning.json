{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Here, the reinforcement learning specific data of assume will be plotted. Especially the process during the learning",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 4,
  "links": [],
  "panels": [
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Welcome to Learning Dashboard by ASSUME\n",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 12,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## How to Use the Dashboard  \n\nThis interactive tool provides insights into the learning process of our reinforcement learning (RL) agent. While the TensorBoard integration (compare ReadMe) provides an overview of the general learning performance of all agents, this dashboard gives you the option to inspect **each agent individually or in comparison**. To effectively navigate the dashboard, keep the following key points in mind:  \n\n### 1. Dashboard Structure  \n\nThe dashboard is divided into two main rows and two columns:  \n\n**COLUMNS**  \n- **Training Episode:** Depicts the results of the selected training episodes at the top of the dashboard. Note that training episodes have special properties such as noise added for exploration purposes.  \n- **Evaluation Episode:** Depicts the results of the selected evaluation episodes.  \n\n**ROWS**  \n- **Per Simulation:** Summarizes results across all simulated episodes, distinguishing between \"training\" and \"evaluation\" episodes.  \n- **Per Episode:** Focuses on specific units and episodes, allowing for detailed analysis.  \n\n### 2. Selecting Metrics and Simulations  \n\nAt the top of the dashboard, you can filter data using the following options:  \n\n- **Simulation ID:** Choose the simulation run you want to analyze.  \n- **Unit & Episode:** Select specific units and episodes for detailed insights. You can also select all units, but be cautiousâ€”visualizing a large number of agents may cause performance issues.  \n\nThe selected metrics will be displayed in corresponding visualization areas.  \n\n### 3. Interacting with Plots  \n\nThe plots are fully interactive:  \n\n- **Zoom** in and out to explore trends.  \n- **Click** on data points for detailed values.  \n- **Hover** over the upper-left corner of each plot for additional insights.  \n\n### How to Interpret the Data  \n\nTo make the most of the dashboard, follow these key steps:  \n\n1. **Understand Learning Trends:**  \n   - Observe how **reward** and **profitability** metrics evolve over time.  \n   - Look for an upward trend in evaluation runs (where exploration is off). Unlike fluctuating training rewards, evaluation rewards should show a steady increase.  \n\n2. **Analyze Policy & Action Patterns:**  \n   - Examine the agent's learned policy and action distribution.  \n   - Identify patterns and assess whether they align with\n",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 48,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## Training Episode ",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 49,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## Evaluation Episode",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 40,
      "panels": [],
      "title": "Per simulation",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "average_reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 31,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH unit_episode_rewards AS (\n    SELECT\n        episode,\n        unit,\n        SUM(reward) / COUNT(*) AS average_reward\n    FROM rl_params\n    WHERE simulation ~ '^${simulation}_[1-9]+'\n      AND learning_mode IS NOT NULL\n      AND unit IN (${rl_unit})  \n    GROUP BY episode, unit\n)\nSELECT episode, unit, average_reward\nFROM unit_episode_rewards\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average training REWARD",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "average_reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 37,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH unit_episode_rewards AS (\n    SELECT\n        episode,\n        unit,\n        SUM(reward) / COUNT(*) AS average_reward\n    FROM rl_params\n    WHERE simulation ~ '^${simulation}_eval_[1-9]+'\n      AND learning_mode IS TRUE\n      AND unit IN (${rl_unit})  \n    GROUP BY episode, unit\n)\nSELECT episode, unit, average_reward\nFROM unit_episode_rewards\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average evaluation REWARD",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 23
      },
      "id": 38,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH unit_episode_profits AS (\n    SELECT\n        episode,\n        unit,\n        sum(profit)/1000 as profit\n    FROM rl_params\n    WHERE simulation ~ '^${simulation}_[1-9]+'\n      AND learning_mode IS NOT NULL\n      AND unit IN (${rl_unit})  \n    GROUP BY episode, unit\n)\nSELECT episode, unit, profit\nFROM unit_episode_profits\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total training PROFIT",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 23
      },
      "id": 39,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH unit_episode_profits AS (\n    SELECT\n        episode,\n        unit,\n        sum(profit)/1000 as profit\n    FROM rl_params\n    WHERE simulation ~ '^${simulation}_eval_[1-9]+'\n      AND learning_mode IS TRUE\n      AND unit IN (${rl_unit})  \n    GROUP BY episode, unit\n)\nSELECT episode, unit, profit\nFROM unit_episode_profits\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total evaluation PROFIT",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 31
      },
      "id": 42,
      "panels": [],
      "title": "Per episode",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 32
      },
      "id": 41,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    reward\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensuring the query filters by the dashboard's time range\n    AND simulation ~ '^${simulation}_[1-9]+'\n    AND learning_mode IS TRUE\n    AND unit IN (${rl_unit})  \n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Training REWARD during Episode ${episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 32
      },
      "id": 43,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    reward\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensuring the query filters by the dashboard's time range\n    AND simulation ~ '^${simulation}_eval_[1-9]+'\n    AND learning_mode IS TRUE\n    AND unit IN (${rl_unit})  \n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Evaluation REWARD during Eval Episode ${eval_episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 40
      },
      "id": 44,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    profit / 1000 AS profit\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensuring the query filters by the dashboard's time range\n    AND simulation ~ '^${simulation}_[1-9]+'\n    AND learning_mode IS TRUE\n    AND unit IN (${rl_unit})  \n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Training PROFIT during Episode ${episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 40
      },
      "id": 45,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    profit / 1000 as profit\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensuring the query filters by the dashboard's time range\n    AND simulation ~ '^${simulation}_eval_[1-9]+'\n    AND learning_mode IS TRUE\n    AND unit IN (${rl_unit})  \n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Evaluation PROFIT during Eval Episode ${eval_episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "noisy_action_1 pp_6"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 48
      },
      "id": 46,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_0 as noisy_action_0,\n    actions_1 as noisy_action_1,\n    actions_1 - exploration_noise_1 as action_1,\n    actions_0 - exploration_noise_0 as action_0\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensuring the query filters by the dashboard's time range\n    AND simulation ~ '^${simulation}_[1-9]+'\n    AND learning_mode IS TRUE\n    AND unit IN (${rl_unit})  \n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Training ACTIONS during Episode ${episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 48
      },
      "id": 47,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_0,\n    actions_1\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensuring the query filters by the dashboard's time range\n    AND simulation ~ '^${simulation}_eval_[1-9]+'\n    AND learning_mode IS TRUE\n    AND unit IN (${rl_unit})  \n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Evaluation ACTIONS during Eval Episode ${episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 0.857
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 56
      },
      "id": 50,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n    SELECT\r\n        simulation,\r\n        datetime + ((column_offset / 2) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\r\n        action_price                                                   -- Unpivoted bid price\r\n    FROM (\r\n        SELECT\r\n            simulation,\r\n            datetime,\r\n            unnest(array[\r\n                actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float, actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\r\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\r\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\r\n            ]) AS action_price,                                        -- Unpivot the bid prices\r\n            generate_series(0, 47) AS column_offset                 -- Generate column indices dynamically\r\n        FROM rl_params\r\n        WHERE simulation ~ '^${simulation}_[1-9]+' AND unit = $rl_unit\r\n    ) subquery\r\n)\r\n-- Final output for plotting\r\nSELECT\r\n    $__timeGroupAlias(bid_time,$__interval),\r\n    MIN(action_price) AS \"min_action_price\",\r\n    MAX(action_price) AS \"max_action_price\",\r\n    simulation as \"simulation\"\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY simulation, bid_time\r\nORDER BY 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Action values from DAM-bidding - P_flex and P_inflex, no noise",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 0.857
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "max_action_price example_02a_base_lstm_eval_2",
                  "max_action_price example_02a_base_lstm_eval_1"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 56
      },
      "id": 51,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n    SELECT\r\n        simulation,\r\n        datetime + ((column_offset / 2) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\r\n        action_price                                                   -- Unpivoted bid price\r\n    FROM (\r\n        SELECT\r\n            simulation,\r\n            datetime,\r\n            unnest(array[\r\n                actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float, actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\r\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\r\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\r\n            ]) AS action_price,                                        -- Unpivot the bid prices\r\n            generate_series(0, 47) AS column_offset                 -- Generate column indices dynamically\r\n        FROM rl_params\r\n        WHERE simulation ~ '^${simulation}_eval_[1-9]+' AND unit = $rl_unit\r\n    ) subquery\r\n)\r\n-- Final output for plotting\r\nSELECT\r\n    $__timeGroupAlias(bid_time,$__interval),\r\n    MIN(action_price) AS \"min_action_price\",\r\n    MAX(action_price) AS \"max_action_price\",\r\n    simulation as \"simulation\"\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY simulation, bid_time\r\nORDER BY 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Action values from DAM-bidding - P_flex and P_inflex, no noise",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "Ye et al. (2019) with only one bid price which is learnt by learning a normal price distribution.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 0.857
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "action_price example_02a_base_lstm_original_8"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 65
      },
      "id": 52,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n    SELECT\r\n        simulation,\r\n        datetime + ((column_offset) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\r\n        action_price                                                   -- Unpivoted bid price\r\n    FROM (\r\n        SELECT\r\n            simulation,\r\n            datetime,\r\n            unnest(array[\r\n                actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float, actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\r\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\r\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\r\n            ]) AS action_price,                                        -- Unpivot the bid prices\r\n            generate_series(0, 47) AS column_offset                 -- Generate column indices dynamically\r\n        FROM rl_params\r\n        WHERE simulation ~ '^${simulation}_[1-9]+' AND unit = $rl_unit\r\n    ) subquery\r\n)\r\n-- Final output for plotting\r\nSELECT\r\n    $__timeGroupAlias(bid_time,$__interval),\r\n    avg(action_price) AS \"action_price\",\r\n    simulation as \"simulation\"\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY simulation, bid_time\r\nORDER BY 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Action values from DAM-bidding - P_bid",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "Ye et al. (2019) with only one bid price which is learnt by learning a normal price distribution.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "area"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 0.857
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "action_price example_02a_base_lstm_original_eval_1"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 65
      },
      "id": 53,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n    SELECT\r\n        simulation,\r\n        datetime + ((column_offset) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\r\n        action_price                                                   -- Unpivoted bid price\r\n    FROM (\r\n        SELECT\r\n            simulation,\r\n            datetime,\r\n            unnest(array[\r\n                actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float, actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\r\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\r\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\r\n            ]) AS action_price,                                        -- Unpivot the bid prices\r\n            generate_series(0, 47) AS column_offset                 -- Generate column indices dynamically\r\n        FROM rl_params\r\n        WHERE simulation ~ '^${simulation}_eval_[1-9]+' AND unit = $rl_unit\r\n    ) subquery\r\n)\r\n-- Final output for plotting\r\nSELECT\r\n    $__timeGroupAlias(bid_time,$__interval),\r\n    avg(action_price) AS \"action_price\",\r\n    simulation as \"simulation\"\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY simulation, bid_time\r\nORDER BY 1",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Action values from DAM-bidding - P_bid",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "example_02a_base_lstm_original",
          "value": "example_02a_base_lstm_original"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT\nSUBSTRING(m.simulation, 0, LENGTH(m.simulation) +1  - strpos(REVERSE(m.simulation),'_')) AS market_simulation\nFROM rl_params m\nwhere perform_evaluation is False and learning_mode is True",
        "description": "Can choose which simulation we want to show ",
        "includeAll": false,
        "label": "Simulation ID",
        "name": "simulation",
        "options": [],
        "query": "SELECT DISTINCT\nSUBSTRING(m.simulation, 0, LENGTH(m.simulation) +1  - strpos(REVERSE(m.simulation),'_')) AS market_simulation\nFROM rl_params m\nwhere perform_evaluation is False and learning_mode is True",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "text": [
            "pp_6"
          ],
          "value": [
            "pp_6"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT unit\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+'",
        "description": "All units that have an reinforcment learning strategy and hence have the Rl specific parameteres logged",
        "includeAll": true,
        "label": "Unit",
        "multi": true,
        "name": "rl_unit",
        "options": [],
        "query": "SELECT DISTINCT unit\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+'",
        "refresh": 2,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "1546300800000",
          "value": "1546300800000"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "",
        "hide": 2,
        "includeAll": false,
        "name": "timeRange",
        "options": [],
        "query": "SELECT MIN(datetime), MAX(datetime) FROM rl_params",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "1",
          "value": "1"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT episode\nFROM rl_params\nWHERE (simulation ~ '^${simulation}_[1-9]+' AND learning_mode IS True)\nORDER BY episode;",
        "includeAll": false,
        "label": "Episode",
        "name": "episode",
        "options": [],
        "query": "SELECT DISTINCT episode\nFROM rl_params\nWHERE (simulation ~ '^${simulation}_[1-9]+' AND learning_mode IS True)\nORDER BY episode;",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "",
          "value": ""
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT episode\nFROM rl_params\nWHERE (simulation ~ '^${simulation}_eval_[1-9]+' AND learning_mode IS TRUE)\nORDER BY episode;\n",
        "includeAll": false,
        "label": "Eval. episode",
        "name": "eval_episode",
        "options": [],
        "query": "SELECT DISTINCT episode\nFROM rl_params\nWHERE (simulation ~ '^${simulation}_eval_[1-9]+'AND learning_mode IS TRUE)\nORDER BY episode;\n",
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2019-02-28T23:00:00.000Z",
    "to": "2019-03-07T23:00:00.000Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h"
    ]
  },
  "timezone": "",
  "title": "ASSUME: Training progress",
  "uid": "JKQzx0q4k",
  "version": 29,
  "weekStart": ""
}
