{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Here, the reinforcement learning specific data of assume will be plotted. Especially the process during the learning",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 4,
  "links": [],
  "panels": [
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Welcome to Learning Dashboard by ASSUME\n",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 12,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## How to Use the Dashboard  \n\nThis interactive tool provides insights into the learning process of our reinforcement learning (RL) agent. While the TensorBoard integration (compare ReadMe) provides an overview of the general learning performance of all agents, this dashboard gives you the option to inspect **each agent individually or in comparison**. To effectively navigate the dashboard, keep the following key points in mind:  \n\n### 1. Dashboard Structure  \n\nThe dashboard is divided into two main rows and two columns:  \n\n**COLUMNS**  \n- **Training Episode:** Depicts the results of the selected training episodes at the top of the dashboard. Note that training episodes have special properties such as noise added for exploration purposes.  \n- **Evaluation Episode:** Depicts the results of the selected evaluation episodes.  \n\n**ROWS**  \n- **Per Simulation:** Summarizes results across all simulated episodes, distinguishing between \"training\" and \"evaluation\" episodes.  \n- **Per Episode:** Focuses on specific units and episodes, allowing for detailed analysis.  \n\n### 2. Selecting Metrics and Simulations  \n\nAt the top of the dashboard, you can filter data using the following options:  \n\n- **Simulation ID:** Choose the simulation run you want to analyze.  \n- **Unit & Episode:** Select specific units and episodes for detailed insights. You can also select all units, but be cautiousâ€”visualizing a large number of agents may cause performance issues.  \n\nThe selected metrics will be displayed in corresponding visualization areas.  \n\n### 3. Interacting with Plots  \n\nThe plots are fully interactive:  \n\n- **Zoom** in and out to explore trends.  \n- **Click** on data points for detailed values.  \n- **Hover** over the upper-left corner of each plot for additional insights.  \n\n### How to Interpret the Data  \n\nTo make the most of the dashboard, follow these key steps:  \n\n1. **Understand Learning Trends:**  \n   - Observe how **reward** and **profitability** metrics evolve over time.  \n   - Look for an upward trend in evaluation runs (where exploration is off). Unlike fluctuating training rewards, evaluation rewards should show a steady increase.  \n\n2. **Analyze Policy & Action Patterns:**  \n   - Examine the agent's learned policy and action distribution.  \n   - Identify patterns and assess whether they align with\n",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 48,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## Training Episode ",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "gridPos": {
        "h": 2,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 49,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "## Evaluation Episode",
        "mode": "markdown"
      },
      "pluginVersion": "11.4.0",
      "title": "",
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 52,
      "panels": [],
      "title": "Per simulation for all units",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "avg_reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 50,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH rewards_by_unit AS (\n    SELECT \n        episode,\n        unit, \n        SUM(reward) AS total_reward\n    FROM rl_params\n    WHERE simulation = '${simulation}'\n      AND evaluation_mode = FALSE\n    GROUP BY episode, unit\n),\nepisode_avg_rewards AS (\n    SELECT \n        episode, \n        SUM(total_reward) / COUNT(DISTINCT unit) AS avg_reward\n    FROM rewards_by_unit\n    GROUP BY episode\n)\nSELECT episode, avg_reward\nFROM episode_avg_rewards\nORDER BY episode;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average training REWARD",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "avg_reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "id": 51,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH rewards_by_unit AS (\n    SELECT \n        episode,\n        unit, \n        SUM(reward) AS total_reward\n    FROM rl_params\n    WHERE simulation = '${simulation}'\n      AND evaluation_mode = TRUE\n    GROUP BY episode, unit\n),\nepisode_avg_rewards AS (\n    SELECT \n        episode, \n        SUM(total_reward) / COUNT(DISTINCT unit) AS avg_reward\n    FROM rewards_by_unit\n    GROUP BY episode\n)\nSELECT episode, avg_reward\nFROM episode_avg_rewards\nORDER BY episode;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average evaluation REWARD",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 40,
      "panels": [],
      "title": "Per simulation per unit",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "total_reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "id": 31,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH rewards_by_unit AS (\n    SELECT \n        episode,\n        unit, \n        SUM(reward) AS total_reward\n    FROM rl_params\n    WHERE simulation = '${simulation}'\n      AND evaluation_mode = FALSE\n      AND unit IN (${rl_unit})\n    GROUP BY episode, unit\n)\nSELECT \n    episode, \n    unit, \n    total_reward\nFROM rewards_by_unit\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total training REWARD",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "total_reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 24
      },
      "id": 37,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH rewards_by_unit AS (\n    SELECT \n        episode,\n        unit, \n        SUM(reward) AS total_reward\n    FROM rl_params\n    WHERE simulation = '${simulation}'\n      AND evaluation_mode = TRUE\n      AND unit IN (${rl_unit})\n    GROUP BY episode, unit\n)\nSELECT \n    episode, \n    unit, \n    total_reward\nFROM rewards_by_unit\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total evaluation REWARD",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "total_profit_k"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 32
      },
      "id": 38,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH unit_episode_profits AS (\n    SELECT\n        episode,\n        unit,\n        SUM(profit) AS total_profit  -- Total profit per unit per episode\n    FROM rl_params\n    WHERE simulation = '${simulation}'\n      AND evaluation_mode = FALSE\n      AND unit IN (${rl_unit})  -- Filter only selected units\n    GROUP BY episode, unit\n)\nSELECT \n    episode, \n    unit, \n    total_profit / 1000 AS total_profit_k  -- Converting to per 1000 units\nFROM unit_episode_profits\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total training PROFIT",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "total_profit_k"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 32
      },
      "id": 39,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "auto",
        "series": [
          {
            "x": {
              "matcher": {
                "id": "byName",
                "options": "episode"
              }
            }
          }
        ],
        "seriesMapping": "auto",
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "WITH unit_episode_profits AS (\n    SELECT\n        episode,\n        unit,\n        SUM(profit) AS total_profit  -- Total profit per unit per episode\n    FROM rl_params\n    WHERE simulation = '${simulation}'\n      AND evaluation_mode = TRUE\n      AND unit IN (${rl_unit})  -- Filter only selected units\n    GROUP BY episode, unit\n)\nSELECT \n    episode, \n    unit, \n    total_profit / 1000 AS total_profit_k  -- Converting to per 1000 units\nFROM unit_episode_profits\nORDER BY episode, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total evaluation PROFIT",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false,
            "naming": {
              "asLabels": false
            }
          }
        }
      ],
      "type": "xychart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 42,
      "panels": [],
      "title": "Per episode per unit",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 41
      },
      "id": 41,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    reward\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensures time filtering aligns with Grafana's dashboard\n    AND simulation = '$simulation'\n    AND evaluation_mode = FALSE\n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Training REWARD during Episode ${episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Reward"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 41
      },
      "id": 43,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    reward\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = TRUE\n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Evaluation REWARD during Eval Episode ${eval_episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 49
      },
      "id": 44,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    profit / 1000 as profit\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensures time filtering aligns with Grafana's dashboard\n    AND simulation = '$simulation'\n    AND evaluation_mode = FALSE\n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Training PROFIT during Episode ${episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "Profit [tsd. Euros]"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 49
      },
      "id": 45,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    profit / 1000 as profit\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)  -- Ensures time filtering aligns with Grafana's dashboard\n    AND simulation = '$simulation'\n    AND evaluation_mode = TRUE\n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Evaluation PROFIT during Eval Episode ${eval_episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 1,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "noisy_action_0"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 57
      },
      "id": 46,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_0 AS noisy_action_0,\n    actions_0 - exploration_noise_0 AS action_0\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = FALSE \n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_1 AS noisy_action_1,  -- Handle missing actions_1\n    actions_1 - exploration_noise_1 AS action_1\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = FALSE \n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Training ACTIONS during Episode ${episode}",
      "transformations": [
        {
          "disabled": true,
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 1,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 57
      },
      "id": 47,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_0\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = TRUE \n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_1\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = TRUE \n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${eval_episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Evaluation ACTIONS during Eval Episode ${eval_episode}",
      "transformations": [
        {
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 1,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 65
      },
      "id": 53,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "hide": true,
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_0 AS noisy_action_0,\n    actions_0 - exploration_noise_0 AS action_0\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = FALSE \n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;\n",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": true,
          "rawQuery": true,
          "rawSql": "SELECT \n    datetime,\n    unit, \n    actions_1 AS noisy_action_1,  -- Handle missing actions_1\n    actions_1 - exploration_noise_1 AS action_1\nFROM rl_params\nWHERE \n    $__timeFilter(datetime)\n    AND simulation = '$simulation'\n    AND evaluation_mode = FALSE \n    AND unit IN (${rl_unit})  -- Supports multiple units\n    AND episode = ${episode}  -- Filtering for the specific episode\nORDER BY datetime, unit;",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": true,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n  SELECT\r\n    simulation,\r\n    datetime + ((column_offset / 1) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\\r\\n        \r\n    action_price                                                   -- Unpivoted bid price\\r\\n    \r\n    FROM (\r\n      SELECT\r\n        simulation,\r\n        datetime,\r\n        unnest(array[\r\n          actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n          actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n          actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float]) AS action_price, --actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\\r\\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\\r\\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\\r\\n            \r\n                                        -- Unpivot the bid prices\\r\\n            \r\n          generate_series(0, 23) AS column_offset,               -- Generate column indices dynamically\\r\\n        \r\n      FROM rl_params      \r\n      WHERE simulation = '$simulation' AND unit = '$rl_unit')\r\n    )\r\n          -- Final output for plotting\r\nSELECT\r\n  $__timeGroupAlias(bid_time,$__interval),\r\n  MIN(action_price) AS \"min_action_price\",\r\n  MAX(action_price) AS \"max_action_price\",\r\n  simulation as \"simulation\"\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY simulation, bid_time\r\nORDER BY 1",
          "refId": "C",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": true,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n  SELECT\r\n    simulation,\r\n    datetime + ((column_offset / 1) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\\r\\n        \r\n    action_price                                                   -- Unpivoted bid price\\r\\n    \r\n    FROM (\r\n      SELECT\r\n        simulation,\r\n        datetime,\r\n        unnest(array[exploration_noise_0::float, exploration_noise_1::float, exploration_noise_2::float, exploration_noise_3::float, exploration_noise_4::float, exploration_noise_5::float, exploration_noise_6::float, exploration_noise_7::float, exploration_noise_8::float, exploration_noise_9::float,\r\n                exploration_noise_10::float, exploration_noise_11::float, exploration_noise_12::float, exploration_noise_13::float, exploration_noise_14::float, exploration_noise_15::float, exploration_noise_16::float, exploration_noise_17::float, exploration_noise_18::float, exploration_noise_19::float,\r\n                exploration_noise_20::float, exploration_noise_21::float, exploration_noise_22::float, exploration_noise_23::float, exploration_noise_24::float]) as action_price,--exploration_noise_25::float, exploration_noise_26::float, exploration_noise_27::float, exploration_noise_28::float, exploration_noise_29::float,\\r\\n                exploration_noise_30::float, exploration_noise_31::float, exploration_noise_32::float, exploration_noise_33::float, exploration_noise_34::float, exploration_noise_35::float, exploration_noise_36::float, exploration_noise_37::float, exploration_noise_38::float, exploration_noise_39::float,\\r\\n                exploration_noise_40::float, exploration_noise_41::float, exploration_noise_42::float, exploration_noise_43::float, exploration_noise_44::float, exploration_noise_45::float, exploration_noise_46::float, exploration_noise_47::float\\r\\n                                       \r\n        generate_series(0, 23) AS column_offset \r\n      FROM rl_params   \r\n      WHERE \r\n        simulation = '$simulation'\r\n        AND evaluation_mode = FALSE \r\n        AND exploration_noise_0 is not NULL\r\n        AND unit IN (${rl_unit})  -- Supports multiple units\r\n        AND episode = ${episode}  -- Filtering for the specific episode\r\n      )\r\n)\r\n\r\nSELECT\r\n  bid_time, \r\n  avg(action_price) as exploration_noise\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY bid_time\r\nORDER BY 1",
          "refId": "D",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n  SELECT\r\n    datetime + ((column_offset / 1) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\\r\\n        \r\n    action_price                                                   -- Unpivoted bid price\\r\\n    \r\n    FROM (\r\n      SELECT\r\n        simulation,\r\n        datetime,\r\n        unnest(array[actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float]) as action_price,--actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\\r\\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\\r\\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\\r\\n                                       \r\n        generate_series(0, 23) AS column_offset \r\n      FROM rl_params   \r\n      WHERE \r\n        simulation = '$simulation'\r\n        AND evaluation_mode = FALSE \r\n        AND actions_0 is not NULL\r\n        AND unit IN (${rl_unit})  -- Supports multiple units\r\n        AND episode = ${episode}  -- Filtering for the specific episode\r\n      )\r\n)\r\n\r\nSELECT\r\n  bid_time, \r\n  avg(action_price) as noisy_action\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY bid_time\r\nORDER BY 1",
          "refId": "E",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "name": "Expression",
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "$E-$D",
          "hide": false,
          "refId": "action",
          "type": "math"
        }
      ],
      "title": "Training ACTIONS during Episode ${episode}",
      "transformations": [
        {
          "disabled": true,
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 1,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 65
      },
      "id": 54,
      "options": {
        "legend": {
          "calcs": [
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": true,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n  SELECT\r\n    simulation,\r\n    datetime + ((column_offset / 1) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\\r\\n        \r\n    action_price                                                   -- Unpivoted bid price\\r\\n    \r\n    FROM (\r\n      SELECT\r\n        simulation,\r\n        datetime,\r\n        unnest(array[exploration_noise_0::float, exploration_noise_1::float, exploration_noise_2::float, exploration_noise_3::float, exploration_noise_4::float, exploration_noise_5::float, exploration_noise_6::float, exploration_noise_7::float, exploration_noise_8::float, exploration_noise_9::float,\r\n                exploration_noise_10::float, exploration_noise_11::float, exploration_noise_12::float, exploration_noise_13::float, exploration_noise_14::float, exploration_noise_15::float, exploration_noise_16::float, exploration_noise_17::float, exploration_noise_18::float, exploration_noise_19::float,\r\n                exploration_noise_20::float, exploration_noise_21::float, exploration_noise_22::float, exploration_noise_23::float, exploration_noise_24::float]) as action_price,--exploration_noise_25::float, exploration_noise_26::float, exploration_noise_27::float, exploration_noise_28::float, exploration_noise_29::float,\\r\\n                exploration_noise_30::float, exploration_noise_31::float, exploration_noise_32::float, exploration_noise_33::float, exploration_noise_34::float, exploration_noise_35::float, exploration_noise_36::float, exploration_noise_37::float, exploration_noise_38::float, exploration_noise_39::float,\\r\\n                exploration_noise_40::float, exploration_noise_41::float, exploration_noise_42::float, exploration_noise_43::float, exploration_noise_44::float, exploration_noise_45::float, exploration_noise_46::float, exploration_noise_47::float\\r\\n                                       \r\n        generate_series(0, 23) AS column_offset \r\n      FROM rl_params   \r\n      WHERE \r\n        simulation = '$simulation'\r\n        AND evaluation_mode = TRUE \r\n        AND exploration_noise_0 is not NULL\r\n        AND unit IN (${rl_unit})  -- Supports multiple units\r\n        AND episode = ${eval_episode}  -- Filtering for the specific episode\r\n      )\r\n)\r\n\r\nSELECT\r\n  bid_time, \r\n  avg(action_price) as exploration_noise\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY bid_time\r\nORDER BY 1",
          "refId": "D",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n  SELECT\r\n    datetime + ((column_offset / 1) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\\r\\n        \r\n    action_price                                                   -- Unpivoted bid price\\r\\n    \r\n    FROM (\r\n      SELECT\r\n        simulation,\r\n        datetime,\r\n        unnest(array[actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float]) as action_price,--actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\\r\\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\\r\\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\\r\\n                                       \r\n        generate_series(0, 23) AS column_offset \r\n      FROM rl_params   \r\n      WHERE \r\n        simulation = '$simulation'\r\n        AND evaluation_mode = TRUE \r\n        AND actions_0 is not NULL\r\n        AND unit IN (${rl_unit})  -- Supports multiple units\r\n        AND episode = ${eval_episode}  -- Filtering for the specific episode\r\n      )\r\n)\r\n\r\nSELECT\r\n  bid_time, \r\n  avg(action_price) as noisy_action\r\nFROM unpivoted_data\r\nWHERE $__timeFilter(bid_time)\r\nGROUP BY bid_time\r\nORDER BY 1",
          "refId": "E",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "name": "Expression",
            "type": "__expr__",
            "uid": "__expr__"
          },
          "expression": "$E-$D",
          "hide": false,
          "refId": "action",
          "type": "math"
        }
      ],
      "title": "Evaluation ACTIONS during Episode ${eval_episode}",
      "transformations": [
        {
          "disabled": true,
          "id": "partitionByValues",
          "options": {
            "fields": [
              "unit"
            ],
            "keepFields": false
          }
        }
      ],
      "type": "timeseries"
    }
  ],
  "preload": false,
  "refresh": "",
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "example_02a_base_lstm",
          "value": "example_02a_base_lstm"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT simulation\nFROM rl_meta",
        "description": "Can choose which simulation we want to show ",
        "includeAll": false,
        "label": "Simulation ID",
        "name": "simulation",
        "options": [],
        "query": "SELECT DISTINCT simulation\nFROM rl_meta",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "text": "100",
          "value": "100"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT episode\nFROM rl_meta\nWHERE simulation = '$simulation' \nAND evaluation_mode = False\nORDER BY episode;",
        "includeAll": false,
        "label": "Episode",
        "name": "episode",
        "options": [],
        "query": "SELECT episode\nFROM rl_meta\nWHERE simulation = '$simulation' \nAND evaluation_mode = False\nORDER BY episode;",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "15",
          "value": "15"
        },
        "datasource": {
          "type": "grafana-postgresql-datasource",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT eval_episode\nFROM rl_meta\nWHERE simulation = '$simulation'\nAND evaluation_mode = True\nORDER BY eval_episode;",
        "includeAll": false,
        "label": "Eval. episode",
        "name": "eval_episode",
        "options": [],
        "query": "SELECT eval_episode\nFROM rl_meta\nWHERE simulation = '$simulation'\nAND evaluation_mode = True\nORDER BY eval_episode;",
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": [
            "pp_6"
          ],
          "value": [
            "pp_6"
          ]
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT unit \nFROM rl_params\nWHERE simulation = '$simulation'\nAND episode = 1\nAND evaluation_mode = False;",
        "description": "All units that have an reinforcment learning strategy and hence have the Rl specific parameteres logged",
        "includeAll": true,
        "label": "Unit",
        "multi": true,
        "name": "rl_unit",
        "options": [],
        "query": "SELECT DISTINCT unit \nFROM rl_params\nWHERE simulation = '$simulation'\nAND episode = 1\nAND evaluation_mode = False;",
        "refresh": 2,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2019-03-01T00:00:00.000Z",
    "to": "2019-03-31T23:59:59.000Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h"
    ]
  },
  "timezone": "",
  "title": "ASSUME: Training progress",
  "uid": "JKQzx0q4k",
  "version": 11,
  "weekStart": ""
}
