{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Here, the reinforcement learning specific data of assume will be plotted. Especially the process during the learning",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 4,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 10,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "# Welcome to ASSUMES Learning Dashboard\n",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  datetime AS \"time\",\n  power\nFROM market_dispatch\nWHERE\n  $__timeFilter(datetime)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "gridPos": {
        "h": 10,
        "w": 5,
        "x": 0,
        "y": 2
      },
      "id": 8,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "#### Introduction\n\nHere we visualize the results of the reinforcement learning process for the specified units that use a learning strategy. \nReinforcement Learning is a machine learning paradigm where an agent learns to make a sequence of decisions in an environment to maximize a reward signal. \nThe agent explores the environment, takes actions, and receives feedback in the form of rewards. \nThe goal is to learn a strategy (policy) that guides the agent to make actions that lead to the highest cumulative reward over time. \nTo better understand the agent's learning process, we use visualizations that illustrate key aspects of its journey.",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  datetime AS \"time\",\n  power\nFROM market_dispatch\nWHERE\n  $__timeFilter(datetime)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": " ",
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "gridPos": {
        "h": 10,
        "w": 19,
        "x": 5,
        "y": 2
      },
      "id": 12,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "#### How to use the dashboard\n\nThis interactive tool is designed to help you gain insights into the learning journey of our reinforcement learning (RL) agent. \nTo understand the dashboard take note of the following three points:\n\n##### 1. Division of the Dashboard:\nThe dashboard is divided into two parts. \nThe upper part summarizes the results for all learning units over all simulated episodes. \nThe lower part focuses the results on specific units and episodes, which you can select according to the second point.\n\n\n##### 2. Selection of Metrics and Simulation Subsets:\nThe dashboard is devided in system wide plots and specific plots for certain episodes, timeframes and learning units.\nOn the top of the dashboard, you'll find a list of available choices for the episode of the simualtion and a list of RL units. \nChoose the ones you're interested in by selecting their names in the list. The selected metrics will be displayed on the choice-specific visualization area.\n\n\n##### 3. Interaction with Plots:\nThe plots are interactive. You can zoom in and out, click on data points to view specific details etc.\nIn the upper left corner of each plot you find additional information about the depicted data.\n\nIf you need some guidance for interpreting the results, you can orient yourself on the follwing steps:\n\n1. Understand Learning Trends: \nObserve how reward, regret, and other metrics change over time. \nLook for trends such as increasing rewards, or decreasing regret. Take note of the evaluation runs, which are done every x episodes. There the exploration isturned off and a \"normal run\" with the currently learned policies is made. \nWhile the reward in all learning episodes can fluctuate you should see a clear rising trend in the evaluation reward. the \n2. Examine Policy and Action Patterns: \nVisualize the agent's learned policy and action distribution. Do you see some pattern in the agents actions. Do these patterns make sense with regard to your domain knowledge?\n5. Compare Different Strategies: \nFor an easy comparison we introduced the ASSUME Comparison dashboard. There you can easily compare two runs with and without learning. Analyse different behaviour of the agents there. \n6. Experiment and Learn: \nUse this tool to experiment with different settings and learn about RL agent behavior. \nIt's a great way to develop a deeper understanding of RL concepts.",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": false,
          "rawSql": "SELECT\n  datetime AS \"time\",\n  power\nFROM market_dispatch\nWHERE\n  $__timeFilter(datetime)\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "type": "text"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "The reward is a measure for the learning agent to determine how desirable (reward > 0) or undesirable (reward < 0) the chosen actions are. This plot shows the rewards averaged over all learning units for each episode. ",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 12
      },
      "id": 20,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime,\n  simulation,\n  unit,\n  (episode::float),\n  reward\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+'\nand learning_mode is true",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average REWARD of all learning units",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 20
      },
      "id": 18,
      "panels": [],
      "title": "Simulation Wide Data",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "The evaluation reward is the reward for evaluation episodes which are calculated with unseen data.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 35,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime,\n  simulation,\n  unit,\n  (episode::float),\n  reward\nFROM rl_params\nwhere simulation ~ '^${simulation}_eval_[1-9]+'\nand perform_evaluation is true",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Average EVALUATION REWARD of all learning units",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "regret (mean)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byType",
              "options": "time"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "auto"
              },
              {
                "id": "custom.axisLabel",
                "value": "Development over all modelled episodes"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "reward episode 44",
                  "reward episode 1"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 29
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "-- this query creates a cumulative sum of the reward until now\r\nSELECT \r\n  $__timeGroupAlias(datetime,$__interval),\r\n  'episode ' || episode AS \"episode\",\r\n  sum(sum(reward)) OVER (PARTITION BY episode ORDER BY datetime) AS \"reward\"\r\nFROM\r\n  rl_params\r\nWHERE\r\n  $__timeFilter(datetime) \r\n  and (simulation ~ '^${simulation}_[1-9]+' OR simulation ~ '^${simulation}_eval_[1-9]+')\r\nGROUP BY 1, datetime, episode\r\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Cumulative average REWARD over all units per episode",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "profit episode 1",
                  "profit episode 45"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 22,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \r\n  $__timeGroupAlias(datetime,$__interval),\r\n  'episode ' || episode AS \"episode\",\r\n  sum(sum(profit)) OVER (PARTITION BY episode ORDER BY datetime) AS \"profit\"\r\nFROM\r\n  rl_params\r\nWHERE\r\n  $__timeFilter(datetime)\r\n  and (simulation ~ '^${simulation}_[1-9]+' OR simulation ~ '^${simulation}_eval_[1-9]+')\r\nGROUP BY 1, datetime, episode\r\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Cumulative average PROFIT over all units per episode",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "learning_mode"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 110
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "perform_evaluation"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 126
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "profit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 119
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "reward"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "unit"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 73
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "actions_1"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 112
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "actions_0"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 111
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "regret"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 124
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 55
      },
      "id": 6,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \r\n*\r\nFROM rl_params TABLESAMPLE BERNOULLI(1)\r\nwhere simulation ~ '^${simulation}_[1-9]+'\r\nlimit 50;",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Exemplary subset of RL parameters",
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 64
      },
      "id": 16,
      "panels": [],
      "title": "Unit-specific and Episodic Data ",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward (mean)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 65
      },
      "id": 31,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime,\n  simulation,\n  unit,\n  (episode::float),\n  reward\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+' AND\n      unit = '$rl_unit' AND learning_mode is true",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Avg. REWARD of unit $rl_unit",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "regret (mean)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 65
      },
      "id": 32,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime,\n  simulation,\n  unit,\n  (episode::float),\n  regret\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+' AND\n      unit = '$rl_unit' AND learning_mode is true",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Avg. REGRET of unit $rl_unit",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "regret": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "reward (mean)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 73
      },
      "id": 36,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime,\n  simulation,\n  unit,\n  (episode::float),\n  reward\nFROM rl_params\nwhere simulation ~ '^${simulation}_eval_[1-9]+' AND\n      unit = '$rl_unit' and perform_evaluation is True",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Avg. EVALUATION REWARD of unit $rl_unit",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "profit (sum)"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 73
      },
      "id": 33,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "always",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "episode",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "group": [],
          "metricColumn": "simulation",
          "rawQuery": true,
          "rawSql": "SELECT\n  datetime,\n  simulation,\n  unit,\n  (episode::float),\n  profit\nFROM rl_params\nWHERE simulation ~ '^${simulation}_[1-9]+'  AND\n      unit = '$rl_unit' AND learning_mode is true",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "reward"
                ],
                "type": "column"
              },
              {
                "params": [
                  "avg",
                  "24"
                ],
                "type": "moving_window"
              },
              {
                "params": [
                  "avg_reward"
                ],
                "type": "alias"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "rl_params",
          "timeColumn": "index",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Total PROFIT of unit $rl_unit",
      "transformations": [
        {
          "id": "calculateField",
          "options": {
            "binary": {
              "left": "index",
              "reducer": "sum",
              "right": "episode"
            },
            "mode": "binary",
            "reduce": {
              "reducer": "sum"
            }
          }
        },
        {
          "id": "groupBy",
          "options": {
            "fields": {
              "episode": {
                "aggregations": [],
                "operation": "groupby"
              },
              "index  episode": {
                "aggregations": [],
                "operation": "aggregate"
              },
              "profit": {
                "aggregations": [
                  "sum"
                ],
                "operation": "aggregate"
              },
              "regret": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              },
              "reward": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              }
            }
          }
        },
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "field": "episode"
              }
            ]
          }
        }
      ],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "noisy_action_Pinflex example_02a_base_eval_4"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 81
      },
      "id": 26,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(datetime,$__interval),\n    case\n    when actions_0::float >= actions_1::float then actions_1::float\n    when actions_0::float < actions_1::float then actions_0::float\n  end as \"noisy_action_Pinflex\",\n  case\n    when actions_0::float >= actions_1::float then GREATEST(-1, LEAST(1, actions_1::float - exploration_noise_1::float))\n    when actions_0::float < actions_1::float then GREATEST(-1, LEAST(1, actions_0::float - exploration_noise_0::float))\n  end as \"action_Pinflex\",\n  simulation AS \"simulation\"\nFROM rl_params\nWHERE\n  $__timeFilter(datetime)\n  and (simulation ~ '^${simulation}_[1-9]+' OR simulation ~ '^${simulation}_eval_[1-9]+') AND\n  unit = '$rl_unit'\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Normalized Action values - P_inflex",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "stepAfter",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "action_Pflex example_02a_base_lstm_regret_37"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 81
      },
      "id": 30,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\n  $__timeGroupAlias(datetime,$__interval),\n  case\n    when actions_0::float <= actions_1::float then actions_1::float\n    when actions_0::float > actions_1::float then actions_0::float \n  end as \"noisy_action_Pflex\",\n  case\n    when actions_0::float <= actions_1::float then GREATEST(-1, LEAST(1, actions_1::float - exploration_noise_1::float)) \n    when actions_0::float > actions_1::float then GREATEST(-1, LEAST(1, actions_0::float - exploration_noise_0::float))\n  end as \"action_Pflex\",\n  simulation AS \"simulation\"\nFROM rl_params\nWHERE\n  $__timeFilter(datetime)\n  and (simulation ~ '^${simulation}_[1-9]+' OR simulation ~ '^${simulation}_eval_[1-9]+') AND\n  unit = '$rl_unit'\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "Normalized Action values - P_flex",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "description": "The accepted volume ratio is the ratio between the accepted volume and the offered volume.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 93
      },
      "id": 24,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  $__timeGroupAlias(start_time,$__interval),\r\n  avg(accepted_volume/volume) AS \"accepted_volume\"\r\nFROM market_orders\r\nWHERE\r\n  $__timeFilter(start_time)\r\n  and simulation = '$simulation'\r\nGROUP BY 1, start_time\r\nORDER BY 1",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "[iP] Average Accepted Volume Ratio for all Units  ",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 2,
        "y": 93
      },
      "id": 29,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  $__timeGroupAlias(start_time,$__interval),\r\n  price AS \"Bid price:\",\r\n  bid_id as \"bid_id\"\r\nFROM market_orders\r\nWHERE\r\n  $__timeFilter(start_time) AND\r\n  simulation = '$simulation'\r\n  AND unit_id = '$rl_unit'\r\nGROUP BY 1, unit_id, price, bid_id\r\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "price"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_orders",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "[iP] Bid price",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 4,
        "y": 93
      },
      "id": 34,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.15",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "P7B13B9DF907EC40C"
          },
          "format": "time_series",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT\r\n  $__timeGroupAlias(start_time,$__interval),\r\n  volume AS \"Bid volume:\",\r\n  bid_id as \"bid_id\"\r\nFROM market_orders\r\nWHERE\r\n  $__timeFilter(start_time) AND\r\n  simulation = '$simulation'\r\n  AND unit_id = '$rl_unit'\r\nGROUP BY 1, unit_id, volume, bid_id\r\nORDER BY 1",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "power"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "market_dispatch",
          "timeColumn": "datetime",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "title": "[iP] Bid volume",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P7B13B9DF907EC40C"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 93
      },
      "id": 37,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "P7B13B9DF907EC40C"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH unpivoted_data AS (\r\n    SELECT\r\n        simulation,\r\n        datetime + ((column_offset / 2) || ' hour')::INTERVAL AS bid_time, -- Adjust timestamp based on column                                              -- Original column name\r\n        action_price                                                   -- Unpivoted bid price\r\n    FROM (\r\n        SELECT\r\n            simulation,\r\n            datetime,\r\n            unnest(array[\r\n                actions_0::float, actions_1::float, actions_2::float, actions_3::float, actions_4::float, actions_5::float, actions_6::float, actions_7::float, actions_8::float, actions_9::float,\r\n                actions_10::float, actions_11::float, actions_12::float, actions_13::float, actions_14::float, actions_15::float, actions_16::float, actions_17::float, actions_18::float, actions_19::float,\r\n                actions_20::float, actions_21::float, actions_22::float, actions_23::float, actions_24::float, actions_25::float, actions_26::float, actions_27::float, actions_28::float, actions_29::float,\r\n                actions_30::float, actions_31::float, actions_32::float, actions_33::float, actions_34::float, actions_35::float, actions_36::float, actions_37::float, actions_38::float, actions_39::float,\r\n                actions_40::float, actions_41::float, actions_42::float, actions_43::float, actions_44::float, actions_45::float, actions_46::float, actions_47::float\r\n            ]) AS action_price,                                        -- Unpivot the bid prices\r\n            generate_series(0, 47) AS column_offset                 -- Generate column indices dynamically\r\n        FROM rl_params\r\n        WHERE simulation = 'example_02a_base_lstm_regret_50'\r\n    ) subquery\r\n)\r\n-- Final output for plotting\r\nSELECT\r\n    bid_time,\r\n    MIN(action_price) AS min_action_price,\r\n    MAX(action_price) AS max_action_price\r\nFROM unpivoted_data\r\nGROUP BY bid_time\r\nORDER BY bid_time;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Test: Transform action values to bids for DAM",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "example_02a_base_lstm_regret",
          "value": "example_02a_base_lstm_regret"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT\nSUBSTRING(m.simulation, 0, LENGTH(m.simulation) +1  - strpos(REVERSE(m.simulation),'_')) AS market_simulation\nFROM rl_params m\nwhere perform_evaluation is False and learning_mode is True",
        "description": "Can choose which simulation we want to show ",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "simulation",
        "options": [],
        "query": "SELECT DISTINCT\nSUBSTRING(m.simulation, 0, LENGTH(m.simulation) +1  - strpos(REVERSE(m.simulation),'_')) AS market_simulation\nFROM rl_params m\nwhere perform_evaluation is False and learning_mode is True",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "pp_6",
          "value": "pp_6"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "SELECT DISTINCT unit\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+'",
        "description": "All units that have an reinforcment learning strategy and hence have the Rl specific parameteres logged",
        "hide": 0,
        "includeAll": false,
        "label": "rl_unit",
        "multi": false,
        "name": "rl_unit",
        "options": [],
        "query": "SELECT DISTINCT unit\nFROM rl_params\nwhere simulation ~ '^${simulation}_[1-9]+'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "1551394800000",
          "value": "1551394800000"
        },
        "datasource": {
          "type": "postgres",
          "uid": "P7B13B9DF907EC40C"
        },
        "definition": "",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "timeRange",
        "options": [],
        "query": "SELECT MIN(datetime), MAX(datetime) FROM rl_params",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2019-02-28T23:00:00.000Z",
    "to": "2019-03-31T23:59:59.000Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h"
    ]
  },
  "timezone": "",
  "title": "ASSUME: Training progress",
  "uid": "JKQzx0q4k",
  "version": 4,
  "weekStart": ""
}
