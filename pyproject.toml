# SPDX-FileCopyrightText: ASSUME Developers
#
# SPDX-License-Identifier: AGPL-3.0-or-later

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "assume-framework"
version = "0.4.1"
description = "ASSUME - Agent-Based Electricity Markets Simulation Toolbox"
authors = [{ name = "ASSUME Developers", email = "contact@assume-project.de"}]
license = {text = "AGPL-3.0-or-later"}
readme = "README.md"
keywords = ["agent based simulation", "energy market", "reinforcement learning", "market simulation", "simulation"]

classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Framework :: AsyncIO",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.10"
dependencies = [
    "argcomplete >=3.1.4",
    "nest-asyncio >=1.5.6",
    "mango-agents-assume >=1.1.4-6",
    "numpy < 2", # Pyomo Incompatible
    "tqdm >=4.64.1",
    "python-dateutil >=2.8.2",
    "sqlalchemy >=2.0.9",
    "pandas >=2.0.0",
    "psycopg2-binary >=2.9.5",
    "pyyaml >=6.0",
    "pyyaml-include >=2.2a",
]

[project.optional-dependencies]
learning = [
    "torch >=2.0.1",
]
optimization = [
    "glpk >=0.4.7",
    "pyomo >=6.6.1",
    "pypsa <=0.30.3",
]
oeds = [
    "demandlib >=0.1.9",
    "holidays >=0.37",
    "pvlib >=0.10.2",
    "windpowerlib >=0.2.1",
    "yaml-include",
]
test = [
    "ruff >=0.4.9",
    "mypy >=1.1.1",
    "matplotlib >=3.7.2",
    "pytest >=7.2.2",
    "pytest-cov >=4.1.0",
    "pytest-asyncio >=0.21.1",
    "glpk >=0.4.7",
]
all = [
    "assume-framework[oeds, optimization, learning]",
]

[project.urls]
homepage = "https://assume.readthedocs.io"
repository = "https://github.com/assume-framework/assume"

[project.scripts]
assume = "assume_cli.cli:cli"

[tool.setuptools]
packages = {find = {}}

[tool.ruff]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "G", "PIE"]
ignore = ["E501", "G004", "E731"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "I001", # allow unsorted imports in __init__.py
    "F401", # allow unused imports in __init__.py
]
"tests/*" = [
    "S101", # allow assert statements for pytest
    "ARG",  # allow unused arguments for pytest fixtures
    "F841", # allow unused local variables
]
"examples/notebooks/*" = [
    "E999", # allow no expressions
    "F841", # allow unused local variables
]

[tool.pytest]
testpaths = "tests"

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
    "ignore:Call to deprecated create function FieldDescriptor",
    "ignore:Call to deprecated create function Descriptor",
    "ignore:Call to deprecated create function FileDescriptor",
    "ignore:Call to deprecated create function EnumValueDescriptor",
    "ignore:Call to deprecated create function EnumDescriptor",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "require_learning",
]
addopts = "--ignore=assume-db"

[tool.coverage.run]
omit = ["tests/*"]
source = ["assume"]

[tool.coverage.report]
# https://stackoverflow.com/a/5850364
exclude_lines = ["if __name__ == .__main__.:"]

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# output
show_error_context = true
show_column_numbers = true
show_error_codes = true
pretty = true
ignore_missing_imports = true
