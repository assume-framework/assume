version: "3.9"
services:
  assume_db:
    container_name: assume_db
    image: timescale/timescaledb:latest-pg15
    restart: always
    environment:
      - POSTGRES_USER=assume
      - POSTGRES_PASSWORD=assume
      - POSTGRES_DB=assume
      - TS_TUNE_MAX_CONNS=500
    volumes:
      - ./assume-db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  grafana:
    image: grafana/grafana-oss:9.2.15
    container_name: assume_grafana
    user: "104"
    depends_on:
      - assume_db
      - renderer
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ALLOW_EMBEDDING: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_INSTALL_PLUGINS: "marcusolsson-dynamictext-panel"
      GF_SECURITY_ADMIN_USER: assume
      GF_SECURITY_ADMIN_PASSWORD: "assume"
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - ./docker_configs/grafana.ini:/etc/grafana/grafana.ini
      - ./docker_configs/datasources:/etc/grafana/provisioning/datasources
      - ./docker_configs/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker_configs/dashboard-definitions:/etc/grafana/provisioning/dashboard-definitions
    restart: always
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  renderer:
    image: grafana/grafana-image-renderer:latest
    profiles: ["enable-renderer"]
    ports:
      - 8081


  simulation:
    container_name: simulation
    image: ghcr.io/assume-framework/assume:latest
    profiles: ["cli-only"]
    build: .
    environment:
      DATABASE_URI: 'postgresql://assume:assume@assume_db/assume'
      EXPORT_CSV_PATH: ''
    ports:
      - 5000:5000
    depends_on:
      - assume_db
    command: -s example_02 -c base -db "sqlite:///"
